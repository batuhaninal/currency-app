@model List<UserAssetsForOperationResponse>
<!-- TablolarÄ±n yer aldÄ±ÄŸÄ± modal -->
<div class="modal fade" id="asset-calculator-popup" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle"
    aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered modal-lg">
        <div class="modal-content">
            <div class='modal-header bg-info'>
                <h5 class="modal-title">VarlÄ±klarim Hesap Makinesi</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>

            <div class="modal-body" id="modal-body">
                <table class="table" id="assetTable">
                    <thead>
                        <tr>
                            <th>BaÅŸlÄ±k</th>
                            <th>Alt BaÅŸlÄ±k</th>
                            <th>Mevcut Adet</th>
                            <th>AlÄ±ÅŸ FiyatÄ±</th>
                            <th>SatÄ±ÅŸ FiyatÄ±</th>
                            <th>SeÃ§ilen Adet</th>
                            <th>Ekle</th>
                            <th>Hepsini Ekle</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var asset in Model)
                        {
                            <tr data-id="@asset.CurrencyId" data-title="@asset.Title" data-subtitle="@asset.SubTitle"
                                data-purchase="@asset.PurchasePrice" data-sale="@asset.SalePrice"
                                data-available="@asset.Count">
                                <td>@asset.Title</td>
                                <td>@asset.SubTitle</td>
                                <td>@asset.Count</td>
                                <td>@asset.PurchasePrice</td>
                                <td>@asset.SalePrice</td>
                                <td>
                                    <input type="number" class="form-control count-input" min="1" max="@asset.Count" />
                                </td>
                                <td>
                                    <span class="badge rounded-pill bg-info p-2 add-calculator-btn" role="button"
                                        title="Birim ekle">
                                        <i class="fa-solid fa-plus"></i>
                                    </span>
                                </td>
                                <td>
                                    <span class="badge rounded-pill bg-success p-2 add-all-calculator-btn" role="button"
                                        title="Tumunu ekle">
                                        <i class="fa-solid fa-folder-plus"></i>
                                    </span>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                <hr />

                <h4>SeÃ§ilen VarlÄ±klar</h4>
                <table class="table" id="selectedAssets">
                    <thead>
                        <tr>
                            <th>BaÅŸlÄ±k</th>
                            <th>Adet</th>
                            <th>Toplam AlÄ±ÅŸ</th>
                            <th>Toplam SatÄ±ÅŸ</th>
                            <th>Sil</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr>
                            <th colspan="2" class="text-end">Toplam:</th>
                            <th id="totalPurchase">0.00</th>
                            <th id="totalSale">0.00</th>
                        </tr>
                    </tfoot>
                </table>
                <div class="text-end mt-2">
                    <button type="button" class="btn btn-danger" id="clearAllBtn">TÃ¼mÃ¼nÃ¼ Ã‡Ä±kart</button>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    (function () {
        const selectedTable = document.querySelector("#selectedAssets tbody");

        document.getElementById("clearAllBtn").addEventListener("click", function () {
            const selectedRows = document.querySelectorAll("#selectedAssets tbody tr");

            selectedRows.forEach(row => {
                const id = row.dataset.id;
                const count = parseInt(row.dataset.count);

                // Kaynak satÄ±rÄ± bul ve mevcut adedi geri gÃ¼ncelle
                const sourceRow = document.querySelector(`#assetTable tr[data-id="${id}"]`);
                if (sourceRow) {
                    let available = parseInt(sourceRow.dataset.available);
                    available += count;
                    sourceRow.dataset.available = available;
                    sourceRow.querySelector("td:nth-child(3)").textContent = available;
                }

                row.remove();
            });

            updateTotals();
        });

        document.querySelectorAll('.add-all-calculator-btn').forEach(function (btn) {
            btn.addEventListener('click', function () {
                const row = this.closest('tr');
                const input = row.querySelector('.count-input');
                const available = parseInt(row.dataset.available);

                if (available < 1) {
                    alert("Bu varlÄ±k iÃ§in eklenebilecek adet kalmadÄ±.");
                    return;
                }

                input.value = available;
                row.querySelector('.add-calculator-btn').click(); // mevcut Ekle butonunu tetikle
            });
        });

        document.querySelectorAll('.add-calculator-btn').forEach(function (btn) {
            btn.addEventListener('click', function () {
                const row = this.closest('tr');
                const id = row.dataset.id;
                const title = row.dataset.title;
                const purchase = parseFloat(row.dataset.purchase);
                const sale = parseFloat(row.dataset.sale);
                const input = row.querySelector('.count-input');
                const count = parseInt(input.value);
                let available = parseInt(row.dataset.available);

                if (!count || count < 1 || count > available) {
                    alert("GeÃ§erli bir adet giriniz.");
                    return;
                }

                // Mevcut adedi azalt
                available -= count;
                row.dataset.available = available;
                row.querySelector("td:nth-child(3)").textContent = available;

                let existingRow = selectedTable.querySelector(`tr[data-id="${id}"]`);

                if (existingRow) {
                    const currentCount = parseInt(existingRow.dataset.count);
                    const newCount = currentCount + count;
                    existingRow.dataset.count = newCount;
                    updateRow(existingRow, newCount, purchase, sale);
                } else {
                    const newRow = document.createElement("tr");
                    newRow.dataset.id = id;
                    newRow.dataset.count = count;
                    newRow.dataset.maxcount = available;
                    newRow.dataset.purchase = purchase;
                    newRow.dataset.sale = sale;

                    newRow.innerHTML = `
    <td>${title}</td>
    <td class="count-cell">
        <button type="button" class="btn btn-sm btn-secondary decrement-btn">âˆ’</button>
        <input type="number" class="form-control form-control-sm count-edit-input d-inline-block mx-2 text-center"
       style="width: 80px;" min="1" max="${available}" value="${count}" />
        <button type="button" class="btn btn-sm btn-secondary increment-btn">+</button>
    </td>
    <td class="purchase-cell">${(count * purchase).toFixed(2)}</td>
    <td class="sale-cell">${(count * sale).toFixed(2)}</td>
    <td><button type="button" class="btn btn-sm btn-danger remove-row-btn">ðŸ—‘</button></td>
`;

                    selectedTable.appendChild(newRow);

                    attachButtons(newRow, row, purchase, sale);
                }

                input.value = "";
                updateTotals();
            });
        });


        function updateRow(row, count, purchase, sale) {
            row.querySelector(".count-cell input").value = count;
            row.querySelector(".purchase-cell").textContent = (count * purchase).toFixed(2);
            row.querySelector(".sale-cell").textContent = (count * sale).toFixed(2);
        }

        function attachButtons(row) {
            const decrementBtn = row.querySelector(".decrement-btn");
            const incrementBtn = row.querySelector(".increment-btn");
            const countInput = row.querySelector(".count-edit-input");
            const purchaseCell = row.querySelector(".purchase-cell");
            const saleCell = row.querySelector(".sale-cell");
            const id = row.dataset.id;
            const purchase = parseFloat(row.dataset.purchase);
            const sale = parseFloat(row.dataset.sale);

            decrementBtn.addEventListener("click", function () {
                let count = parseInt(countInput.value);
                if (count > 1) {
                    countInput.value = count - 1;
                    countInput.dispatchEvent(new Event("change"));
                }
            });

            incrementBtn.addEventListener("click", function () {
                let count = parseInt(countInput.value);
                const max = parseInt(row.dataset.maxcount);
                if (count < max) {
                    countInput.value = count + 1;
                    countInput.dispatchEvent(new Event("change"));
                }
            });

            countInput.addEventListener("change", function () {
                let newCount = parseInt(this.value);

                const id = row.dataset.id;
                const sourceRow = document.querySelector(`#assetTable tr[data-id="${id}"]`);
                let currentAvailable = parseInt(sourceRow.dataset.available);
                let previousCount = parseInt(row.dataset.count);

                // KullanÄ±cÄ±nÄ±n toplam sahip olabileceÄŸi miktar = eldeki + daha Ã¶nce seÃ§tiÄŸi miktar
                const max = currentAvailable + previousCount;

                if (!newCount || newCount < 1 || newCount > max) {
                    alert("GeÃ§erli bir adet giriniz.");
                    this.value = previousCount;
                    return;
                }

                const diff = newCount - previousCount;
                row.dataset.count = newCount;

                // Elde kalan gÃ¼ncellemesi
                sourceRow.dataset.available = currentAvailable - diff;
                sourceRow.querySelector("td:nth-child(3)").textContent = currentAvailable - diff;

                purchaseCell.textContent = (newCount * purchase).toFixed(2);
                saleCell.textContent = (newCount * sale).toFixed(2);

                updateTotals();
            });


            const removeBtn = row.querySelector(".remove-row-btn");
            removeBtn.addEventListener("click", function () {
                const id = row.dataset.id;
                const count = parseInt(row.dataset.count);

                const sourceRow = document.querySelector(`#assetTable tr[data-id="${id}"]`);
                if (sourceRow) {
                    let available = parseInt(sourceRow.dataset.available);
                    available += count;
                    sourceRow.dataset.available = available;
                    sourceRow.querySelector("td:nth-child(3)").textContent = available;
                }

                row.remove();
                updateTotals();
            });
        }


        function updateTotals() {
            let totalPurchase = 0;
            let totalSale = 0;

            document.querySelectorAll("#selectedAssets tbody tr").forEach(row => {
                const purchase = parseFloat(row.querySelector(".purchase-cell").textContent);
                const sale = parseFloat(row.querySelector(".sale-cell").textContent);
                totalPurchase += purchase;
                totalSale += sale;
            });

            document.getElementById("totalPurchase").textContent = totalPurchase.toFixed(2);
            document.getElementById("totalSale").textContent = totalSale.toFixed(2);
        }
    })();
</script>
